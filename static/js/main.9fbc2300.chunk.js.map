{"version":3,"sources":["components/Logo/brain.svg","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/BoundingBox/BoundingBox.js","components/FaceDetection/FaceDetection.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Logo","className","options","max","style","height","width","src","brain","alt","ImageLinkForm","onInputChange","onDetect","type","onChange","placeholder","onClick","BoundingBox","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","FaceDetection","boxes","imageUrl","id","map","c","i","key","app","Clarifai","App","apiKey","particleOptions","particles","number","value","density","enable","value_area","line_linked","enable_auto","e","setState","target","models","predict","FACE_DETECT_MODEL","state","then","response","multipleBoxes","outputs","data","regions","obj","region_info","bounding_box","calculateFaceLocation","catch","error","console","log","image","document","getElementById","bounding_boxes","top_row","right_col","bottom_row","left_col","params","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9fbc2300.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brain.2e5504b0.svg\";","import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport './Logo.css';\r\nimport brain from './brain.svg';\r\n\r\nexport default function Logo() {\r\n\treturn (\r\n\t\t<div className=\"logo\">\r\n\t\t\t<Tilt className=\"Tilt br2 shadow-2\" options={{ max: 40 }} style={{ height: 110, width: 110 }}>\r\n\t\t\t\t<div className=\"Tilt-inner\">\r\n\t\t\t\t\t<img src={brain} alt=\"brain logo\" className=\"pa2\" />\r\n\t\t\t\t</div>\r\n\t\t\t</Tilt>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({ onInputChange, onDetect }) => {\r\n\treturn (\r\n\t\t<div className=\"font mt6\">\r\n\t\t\t<p className=\"f2 mb2 black font1\">This is a Face Recognition App</p>\r\n\t\t\t<div className=\"flex center shadow-2 inputbuttondiv pa4 pr3 pl3 br2 w-50\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"input is-rounded font3\"\r\n\t\t\t\t\tonChange={onInputChange}\r\n\t\t\t\t\tplaceholder=\"Please enter the URL of the image (can recognize only one face as of now)\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"button is-rounded is-outlined is-success pointer grow ml2 w-10\" onClick={onDetect}>\r\n\t\t\t\t\t<span className=\"white font3 f6\">\r\n\t\t\t\t\t\t<strong>Detect</strong>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\nimport './BoundingBox.css';\r\n\r\nconst BoundingBox = ({ box }) => {\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"absolute bounding-box\"\r\n\t\t\tstyle={{ top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol }}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default BoundingBox;\r\n","import React from 'react';\r\nimport './FaceDetection.css';\r\nimport BoundingBox from '../BoundingBox/BoundingBox';\r\n\r\nconst FaceDetection = ({ boxes, imageUrl }) => {\r\n\treturn (\r\n\t\t<div className=\"mt2\">\r\n\t\t\t<div className=\"absolute imgcontainer\">\r\n\t\t\t\t<img id=\"inputImage\" src={imageUrl} width=\"500px\" height=\"auto\" alt=\"\" />\r\n\t\t\t\t{boxes.map((c, i) => <BoundingBox key={i} box={c} />)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default FaceDetection;\r\n","import React, { Component } from 'react';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceDetection from './components/FaceDetection/FaceDetection';\n\nconst app = new Clarifai.App({\n\tapiKey: '917ae1bc8dd6466699f1f5f13dec6144'\n});\n\nconst particleOptions = {\n\tparticles: {\n\t\tnumber: {\n\t\t\tvalue: 80,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 800\n\t\t\t}\n\t\t},\n\t\tline_linked: {\n\t\t\tenable_auto: true\n\t\t}\n\t}\n};\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\timageUrl: '',\n\t\t\tboxes: []\n\t\t};\n\t}\n\n\tonInputChange = (e) => {\n\t\tthis.setState({ imageUrl: e.target.value });\n\t};\n\n\tonDetect = () => {\n\t\tapp.models\n\t\t\t.predict(Clarifai.FACE_DETECT_MODEL, this.state.imageUrl)\n\t\t\t.then((response) => {\n\t\t\t\t// console.log(response);\n\t\t\t\tconst multipleBoxes = response.outputs[0].data.regions.map((obj) => obj.region_info.bounding_box);\n\t\t\t\t// console.log(multipleBoxes);\n\t\t\t\tthis.calculateFaceLocation(multipleBoxes);\n\t\t\t})\n\t\t\t.catch((error) => console.log(error));\n\t};\n\n\tcalculateFaceLocation = (boxes) => {\n\t\tconsole.log(boxes);\n\t\tconst image = document.getElementById('inputImage');\n\t\tconst width = image.width;\n\t\tconst height = image.height;\n\t\tconst bounding_boxes = boxes.map((obj) => {\n\t\t\tconst box = {\n\t\t\t\ttopRow: obj.top_row * height,\n\t\t\t\trightCol: width - obj.right_col * width,\n\t\t\t\tbottomRow: height - obj.bottom_row * height,\n\t\t\t\tleftCol: obj.left_col * width\n\t\t\t};\n\t\t\t// console.log(box);\n\t\t\treturn box;\n\t\t});\n\t\tthis.setState({ boxes: bounding_boxes });\n\t\t// console.log(bounding_boxes);\n\t\t// console.log(this.state.box);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Particles className=\"particles\" params={particleOptions} />\n\t\t\t\t{/* <Navigation /> */}\n\t\t\t\t<Logo />\n\t\t\t\t{/* <Rank /> */}\n\t\t\t\t<ImageLinkForm onInputChange={this.onInputChange} onDetect={this.onDetect} />\n\t\t\t\t<FaceDetection boxes={this.state.boxes} imageUrl={this.state.imageUrl} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport 'bulma/css/bulma.css';\nimport './fonts.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}